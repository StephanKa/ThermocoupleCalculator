name: C/C++ CMake CI

on: [push, pull_request]

env:
  # Conan cache environment variables
  CONAN_SYSREQUIRES_MODE: enabled
  CONAN_USER_HOME: "${{ github.workspace }}/conan-cache"
  CONAN_USER_HOME_SHORT: "${{ github.workspace }}/conan-cache/short"

jobs:
  linux:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false  # 'false' means Don't stop matrix workflows even if some matrix entry fails.
      matrix:
        os: [ubuntu-22.04]
        buildtype: [debug, release]
        compiler: [ {name: 'GCC 10', preset: gcc-10, pkgs: 'gcc-10 g++-10 lib32gcc-10-dev gcc-multilib'},
                    {name: 'GCC 11', preset: gcc-11, pkgs: 'gcc-11 g++-11 lib32gcc-11-dev gcc-multilib'},
                    {name: 'GCC 12', preset: gcc-12, pkgs: 'gcc-12 g++-12 lib32gcc-12-dev gcc-multilib'},
                    {name: 'Clang 12', preset: clang-12, pkgs: 'clang-12 llvm-12'},
                    {name: 'Clang 13', preset: clang-13, pkgs: 'clang-13 llvm-13'},
                    {name: 'Clang 14', preset: clang-14, pkgs: 'clang-14 llvm-14'},
                    {name: 'Clang 15', preset: clang-15, pkgs: 'clang-15 llvm-15'}
                  ]
    steps:
    - uses: actions/checkout@v3

    - name: Cache
      uses: actions/cache@v3
      env:
        cache-name: cache-conan-modules
      with:
        path: |
          ${{ env.CONAN_USER_HOME }}
          ~/.cache/pip
        key: ${{ runner.os }}-${{ env.BUILD_TYPE }}-${{ hashFiles('CMakeLists.txt') }}-${{ hashFiles('cmake/Conan.cmake') }}

    - name: Install LLVM dependencies
      if: ${{ startsWith(matrix.compiler.name, 'Clang') }}
      run:   |
             sudo apt-get purge --auto-remove llvm python3-lldb-14 llvm-14 # https://github.com/llvm/llvm-project/issues/64182
             sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"
      shell: bash

    - name: Install dependencies
      run:   |
             sudo apt update
             sudo apt install ninja-build ${{ matrix.compiler.pkgs }}
      shell: bash

    - name: Install conan
      shell: bash
      run: |
           python3 -m pip install --upgrade pip setuptools
           python3 -m pip install conan
           source ~/.profile

    - name: Configure via CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      run: cmake --preset ${{ matrix.compiler.preset }}-${{ matrix.buildtype }}

    - name: Build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run:  cmake --build --preset ${{ matrix.compiler.preset }}-${{ matrix.buildtype }}

    - name: Test
      shell: bash
      run: ctest --preset ${{ matrix.compiler.preset }}-${{ matrix.buildtype }}

  windows:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false  # 'false' means Don't stop matrix workflows even if some matrix entry fails.
      matrix:
        os: [windows-2022, windows-2019]
        buildtype: [debug]
    steps:
      - uses: actions/checkout@v3
      - name: Install conan
        shell: bash
        run: |
          python3 -m pip install --upgrade pip setuptools
          python3 -m pip install conan

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        shell: bash
        run: cmake --preset ${{ matrix.os }}-${{ matrix.buildtype }}

      - name: Build
        shell: bash
        run:  cmake --build --preset ${{ matrix.os }}-${{ matrix.buildtype }}

      - name: Test
        shell: bash
        run: ctest --preset ${{ matrix.os }}-${{ matrix.buildtype }}
